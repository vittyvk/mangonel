#!/usr/bin/env python

import os
import sys
import unittest

from mangonel.mangoneloptparse import MangonelOptionParser


# katello-cli requires kerberos module
try:
    import kerberos
except ImportError, e:
    print "Please install kerberos module."

if __name__ == "__main__":

    prog = "Mangonel"
    description = "Runs unittest against a Katello instance."
    usage = "%(prog)s --host <HOST> --username <NAME> --password <PASSWORD> --tests [<TEST1>, <TESTn>]"
    epilog = "Constructive comments and feedback can be sent to Og Maciel <omaciel at ogmaciel dot com>."
    version = "%(prog)s 0.1"

    parser = MangonelOptionParser(prog=prog, usage=usage, description=description, epilog=epilog, version=version)

    parser.add_option('-s', '--host', type=str, dest='host', help='Server url')
    parser.add_option('-u', '--username', type=str, dest='username', default='admin', help='Valid system username')
    parser.add_option('-p', '--password', type=str, dest='password', default='admin', help='Valid system user password')
    parser.add_option('--project', type=str, dest='project', default='/katello', help='Project can be either "katello" or "headpin"')
    parser.add_option('--port', type=str, dest='port', default='443', help='Server port, defaults to 443')
    parser.add_option('-t', '--tests', type=str, action='append', help='The name of the tests to be run.')
    parser.add_option('--verbose', type='choice',  choices=['1', '2', '3', '4', '5'], default='3', help='Debug verbosity level')

    (options, ignored_options) = parser.parse_args()

    # Validation
    if options.host is None:
        parser.print_usage()
        sys.exit(-1)
    else:
        os.environ['KATELLO_HOST'] = options.host
        os.environ['KATELLO_USERNAME'] = options.username
        os.environ['KATELLO_PASSWORD'] = options.password

        # Make sure that PROJECT starts with leading "/"
        if not options.project.startswith("/"): options.project = "/" + options.project
        os.environ['PROJECT'] = options.project

        os.environ['KATELLO_PORT'] = options.port
        os.environ['VERBOSITY'] = options.verbose

    loader = unittest.TestLoader()
    suite = unittest.TestSuite()

    for test_name in options.tests:
        suite.addTests(loader.loadTestsFromName(test_name))

    runner = unittest.TextTestRunner(verbosity=options.verbose)
    result = runner.run(suite)
